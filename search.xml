<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA['sed引用shell变量']]></title>
    <url>%2F2018%2F09%2F04%2Fsed%E5%BC%95%E7%94%A8shell%E5%8F%98%E9%87%8F%2F</url>
    <content type="text"><![CDATA[123456sed -i 's#centos#'"$name"'#g' test.txteval sed 's/$a/$b/' filenamesed "s/$a/$b/" filenamesed 's/'$a'/'$b'/' filenamesed s/$a/$b/ filename 123456789101112[root@centos691 /server/scripts]# cat test.txtcentos[root@centos691 /server/scripts]# name=oldboy;sed -n 's#centos#'"$name"'#gp' test.txtoldboy[root@centos691 /server/scripts]# name=oldboy;sed -n 's#centos#'$name'#gp' test.txtoldboy[root@centos691 /server/scripts]# name=oldboy;sed -n "s#centos#$name#gp" test.txtoldboy[root@centos691 /server/scripts]# name=oldboy;sed -n s#centos#$name#gp test.txtoldboy[root@centos691 /server/scripts]# name=oldboy;eval sed -n 's#centos#$name#gp' test.txtoldboy]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>sed</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LNMP系列（三）之php源码安装]]></title>
    <url>%2F2018%2F09%2F03%2FLNMP%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89%E4%B9%8Bphp%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[LNMP系列（三）之php源码安装php源码安装 解压PHP软件，进行编译安装，将程序安装到/application目录中，并且创建软链接 123yum install zlib-devel libxml2-devel libjpeg-devel libjpeg-turbo-devel curl-devel -yyum install freetype-devel libpng-devel gd-devel libcurl-devel libxslt-devel libxslt-devel -yrpm -qa zlib-devel libxml2-devel libjpeg-devel libjpeg-turbo-devel curl-devel freetype-devel libpng-devel gd-devel libcurl-devel libxslt-devel libxslt-devel 安装其它相关程序—libmcrypt123456#wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repoyum -y install libmcrypt-devel mhash mcryptrpm -qa libmcrypt-devel mhash mcrypt http://php.net/releases/ 安装PHP软件程序1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677#下载安装包并解压cd ~/tools/wget http://cn2.php.net/distributions/php-5.6.36.tar.gztar xf php-5.6.36.tar.gzcd php-5.6.36 #----正式编译前也可以把这个软件安装上（libxslt*）./configure --prefix=/application/php-5.6.36 \--with-mysql=mysqlnd \--with-pdo-mysql=mysqlnd \--with-freetype-dir \--with-jpeg-dir \--with-png-dir \--with-zlib \--with-libxml-dir=/usr \--enable-xml \--disable-rpath \--enable-bcmath \--enable-shmop \--enable-sysvsem \--enable-inline-optimization \--with-curl \--enable-mbregex \--enable-fpm \--enable-mbstring \--with-mcrypt \--with-gd \--enable-gd-native-ttf \--with-openssl \--with-mhash \--enable-pcntl \--enable-sockets \--with-xmlrpc \--enable-soap \--enable-short-tags \--enable-static \--with-xsl \--with-fpm-user=www \--with-fpm-group=www \--enable-ftp \--enable-opcache=no##提示 如下内容 即成功Generating filesconfigure: creating ./config.statuscreating main/internal_functions.ccreating main/internal_functions_cli.c+--------------------------------------------------------------------+| License: || This software is subject to the PHP License, available in this || distribution in the file LICENSE. By continuing this installation || process, you are bound by the terms of this license agreement. || If you do not agree with the terms of this license, you must abort || the installation process at this point. |+--------------------------------------------------------------------+Thank you for using PHP.config.status: creating php5.specconfig.status: creating main/build-defs.hconfig.status: creating scripts/phpizeconfig.status: creating scripts/man1/phpize.1config.status: creating scripts/php-configconfig.status: creating scripts/man1/php-config.1config.status: creating sapi/cli/php.1config.status: creating sapi/fpm/php-fpm.confconfig.status: creating sapi/fpm/init.d.php-fpmconfig.status: creating sapi/fpm/php-fpm.serviceconfig.status: creating sapi/fpm/php-fpm.8config.status: creating sapi/fpm/status.htmlconfig.status: creating sapi/cgi/php-cgi.1config.status: creating ext/phar/phar.1config.status: creating ext/phar/phar.phar.1config.status: creating main/php_config.hconfig.status: executing default commands 12345678910111213141516ln -s /application/mysql/lib/libmysqlclient.so.18 /usr/lib64/ #可以不创建 touch ext/phar/phar.phar #这个文件一定要创建make &amp;&amp; make installln -s /application/php-5.6.36/ /application/phpGenerating phar.phpGenerating phar.pharPEAR package PHP_Archive not installed: generated phar will require PHP's phar extension be enabled.clicommand.incpharcommand.incinvertedregexiterator.incdirectorygraphiterator.incdirectorytreeiterator.incphar.incBuild complete. 123456789101112131415161718192021222324252627282930[root@web01 php-5.6.36]# make install Installing PHP CLI binary: /application/php-5.6.36/bin/Installing PHP CLI man page: /application/php-5.6.36/php/man/man1/Installing PHP FPM binary: /application/php-5.6.36/sbin/Installing PHP FPM config: /application/php-5.6.36/etc/Installing PHP FPM man page: /application/php-5.6.36/php/man/man8/Installing PHP FPM status page: /application/php-5.6.36/php/php/fpm/Installing PHP CGI binary: /application/php-5.6.36/bin/Installing PHP CGI man page: /application/php-5.6.36/php/man/man1/Installing build environment: /application/php-5.6.36/lib/php/build/Installing header files: /application/php-5.6.36/include/php/Installing helper programs: /application/php-5.6.36/bin/ program: phpize program: php-configInstalling man pages: /application/php-5.6.36/php/man/man1/ page: phpize.1 page: php-config.1Installing PEAR environment: /application/php-5.6.36/lib/php/[PEAR] Archive_Tar - installed: 1.4.0[PEAR] Console_Getopt - installed: 1.4.1[PEAR] Structures_Graph- installed: 1.1.1[PEAR] XML_Util - installed: 1.3.0[PEAR] PEAR - installed: 1.10.1Wrote PEAR system config file at: /application/php-5.6.36/etc/pear.confYou may want to add: /application/php-5.6.36/lib/php to your php.ini include_path/home/oldboy/tools/php-5.6.36/build/shtool install -c ext/phar/phar.phar /application/php-5.6.36/binln -s -f phar.phar /application/php-5.6.36/bin/pharInstalling PDO headers: /application/php-5.6.36/include/php/ext/pdo/[root@web01 php-5.6.36]# echo $?0 复制php.ini配置文件1[root@web01 php-5.6.36]# cp /home/oldboy/tools/php-5.6.36/php.ini-production /application/php-5.6.36/lib/php.ini 复制php-fpm配置文件1234567891011121314151617[root@web01 php-5.6.36]# cd /application/php-5.6.36/etc/[root@web01 etc]# ls pear.conf php-fpm.conf.default[root@web01 etc]# cp php-fpm.conf.default php-fpm.conf[root@web01 etc]# lltotal 52-rw-r--r-- 1 root root 1332 Feb 27 22:53 pear.conf-rw-r--r-- 1 root root 22609 Feb 27 22:56 php-fpm.conf-rw-r--r-- 1 root root 22609 Feb 27 22:53 php-fpm.conf.default[root@web01 etc]# /application/php-5.6.36/sbin/php-fpm -t[27-Feb-2018 22:56:53] NOTICE: configuration file /application/php-5.6.36/etc/php-fpm.conf test is successful[root@web01 etc]# /application/php-5.6.36/sbin/php-fpm [root@web01 etc]# ss -lntup |grep 9000tcp LISTEN 0 16384 127.0.0.1:9000 *:* users:(("php-fpm",129733,7),("php-fpm",129734,0),("php-fpm",129735,0)) LNMP搭建网站前的测试。 测试nginx与php配合是否成功php与MySQL配合是否成功部署网站 测试nginx与php配合是否成功1234567891011121314server &#123; listen 80; server_name blog.etiantian.org; root html/blog; index index.php index.html index.htm; location ~ .*\.(php|php5)?$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi.conf; &#125;&#125;echo '&lt;?php phpinfo();?&gt;' &gt;/application/nginx/html/blog/test_info.php php与MySQL配合是否成功1234567891011test_mysql.php&lt;?php //$link_id=mysql_connect('主机名','用户','密码'); $link_id=mysql_connect('172.16.1.51','wordpress','123456') or mysql_error(); if($link_id)&#123; echo "mysql successful by oldboy ! \n"; &#125;else&#123; echo mysql_error(); &#125;?&gt;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>lnmp</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LNMP系列（二）之MySQL]]></title>
    <url>%2F2018%2F09%2F03%2FLNMP%E7%B3%BB%E5%88%97%EF%BC%88%E4%BA%8C%EF%BC%89%E4%B9%8BMySQL%2F</url>
    <content type="text"><![CDATA[LNMP系列（二）之MySQL安装–二进制安装二进制安装MySQL-5.6.400.准备工作-下载mysql1234https://downloads.mysql.com/archives/community/cd /home/oldboy/toolswget https://downloads.mysql.com/archives/get/file/mysql-5.6.40-linux-glibc2.12-x86_64.tar.gz 1.添加用户1useradd -s /sbin/nologin -M mysql 2.解压 mysql 二进制包12cd /home/oldboy/toolstar xf mysql-5.6.39-*-x86_64.tar.gz 3.把MySQL 移动到 /application/12mkdir -p /application/mv /home/oldboy/tools/mysql-5.6.39-*-x86_64 /application/mysql-5.6.39 4.创建软连接1ln -s /application/mysql-5.6.39/ /application/mysql 5.让MySQL用户管理 /application/mysql1chown -R mysql.mysql /application/mysql/data 6.安装这个软件 初始化数据库 #1.软件安装在哪里 #2.数据存放在哪里 #3.MySQL使用的用户谁？ 1/application/mysql/scripts/mysql_install_db --basedir=/application/mysql --datadir=/application/mysql/data --user=mysql 12345678910#####To start mysqld at boot time you have to copy#####support-files/mysql.server to the right place for your system#####mysql启动脚本 默认放在support-files/mysql.server##########记得给MySQL设置个密码#####PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !#####To do so, start the server, then issue the following commands:########## /application/mysql/bin/mysqladmin -u root password 'new-password'##### /application/mysql/bin/mysqladmin -u root -h web01 password 'new-password' 7.复制启动脚本 授权12cp /application/mysql/support-files/mysql.server /etc/init.d/mysqldchmod +x /etc/init.d/mysqld 8.修改启动脚本 和 mysql命令 中的路径1sed -i 's#/usr/local/mysql#/application/mysql#g' /application/mysql/bin/mysqld_safe /etc/init.d/mysqld 9.复制 默认的配置文件12\cp /application/mysql/support-files/my-default.cnf /etc/my.cnf/etc/init.d/mysqld start 1234567891011121314151617181920###故障##1./tmp权限##2.主机名解析 hosts解析 #ping 主机名##3.一步一步执行####/application/mysql/bin/mysql##Welcome to the MySQL monitor. Commands end with ; or \g.##Your MySQL connection id is 1##Server version: 5.5.49 MySQL Community Server (GPL)####Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.####Oracle is a registered trademark of Oracle Corporation and/or its##affiliates. Other names may be trademarks of their respective##owners.####Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.####mysql&gt; 10.PATH路径123echo 'export PATH=/application/mysql/bin:$PATH' &gt;&gt;/etc/profilesource /etc/profilewhich mysql 11.加入开机自启动12chkconfig --add mysqldchkconfig mysqld on 12.给MySQL root用户设置密码1/application/mysql/bin/mysqladmin -u root password 'oldboy123' 13.重新登录MySQL数据库1mysql -uroot -poldboy123 14.数据库基础框架 #1.数据库 test mysql #2.表格 12345#mysql SQL语句#查看系统中所有数据库#show databases;#查看系统中所有的用户#使用某一个数据库 1234567891011mysql&gt; #查看当前都有啥mysql&gt; show databases; //********+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || test |+--------------------+4 rows in set (0.07 sec) 初级 查看系列-开始123##使用某一个数据库###相当于进入 mysql 数据库中 cd mysql ; cd test#use mysql 12345678##我想查看当前在哪？ pwd 当前正在使用哪个数据库select database();+------------+| database() |+------------+| mysql |+------------+1 row in set (0.00 sec) 12345678##我是谁？ 查看当前用户select user();+----------------+| user() |+----------------+| root@localhost |+----------------+1 row in set (0.00 sec) 12345678910111213141516###当前系统都有什么用户？ 他们可以在哪里登录？ *****select user,host from mysql.user;+------+-----------+| user | host |+------+-----------+| root | 127.0.0.1 || root | ::1 || | localhost || root | localhost || | web01 || root | web01 |+------+-----------+6 rows in set (0.02 sec)####初级 查看系列-结束###show databases;###select user,host from mysql.user; 初级 添加删除系列12345678910111213141516171819202122#创建数据库create database wordpress;#删除数据库drop database wordpress;#添加用户grant all on wordpress.* to 'wordpress'@'172.16.1.0/255.255.255.0' identified by '123456';grant all on wordpress.* to 'wordpress'@'172.16.1.0/255.255.255.0' identified by '123456';授权所有的权限, wordpress数据库所有的权限 给 wordpress用户 可以在172.16.1.0/255.255.255.0 网段登录数据库 这个用户的密码123456；#更新系统的权限表flush privileges;###进行测试mysql -uwordpress -p123456mysql -uwordpress -p -h 172.16.1.8#删除用户drop user wordpress@'172.16.1.8'; ###1.查看都有什么数据库 ###2.查看都有什么用户 ###3.添加用户 help sql语句。123456789#跳过授权表（不用密码登录）#/etc/init.d/mysqld restart --skip-grant-table#mysql 命令行#-u 指定用户#-p 指定密码（不要有空格）#-h 连接到某一台服务器#更改密码 mysqladmin -uroot -poldboy123 password '新的密码']]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>lnmp</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[LNMP系列（一）nginx源码安装]]></title>
    <url>%2F2018%2F08%2F24%2FLNMP%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89nginx%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[LNMP系列（一）nginx源码安装下载安装过程12345678910111213141516171819cd /root/mkdir toolscd tools/yum install openssl openssl-devel -yyum install pcre pcre-devel -yuseradd www -s /sbin/nologin -Mwget -q http://nginx.org/download/nginx-1.14.0.tar.gztar xf nginx-1.14.0.tar.gzcd nginx-1.14.0./configure --user=www --group=www --with-http_ssl_module --with-http_stub_status_module --prefix=/apps/nginx-1.14.0/makemake installln -s /apps/nginx-1.14.0/ /apps/nginx 检查 重启123/apps/nginx/sbin/nginx -t/apps/nginx/sbin/nginx -s reload 配置文件123456789101112131415161718192021222324worker_processes 1;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; server &#123; listen 80; server_name 10.0.0.61; # 域名 location / &#123; root /mnt/hgfs/rpm; # 网站根目录 index index.html index.htm; autoindex on; # 目录列表 autoindex_exact_size off; autoindex_localtime on; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F08%2F24%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo改换主题]]></title>
    <url>%2F2018%2F08%2F24%2Fhexo-theme%2F</url>
    <content type="text"><![CDATA[hexo 更换主题自己在github上搭建了一个博客，主题不喜欢，所以就换一个，个人比较喜欢的有两个，一个是light，另了个是next。 安装主题安装都很简单，进入你hexo的根目录，直接git就可以了。每个主题都有给出安装方法，很简单。12345#light git clone https://github.com/hexojs/hexo-theme-light.git themes/light#next git clone https://github.com/theme-next/hexo-theme-next themes/next 使用主题使用也很简单，到_config.yml配置文件中，修改theme选项 1theme: next]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>theme</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
