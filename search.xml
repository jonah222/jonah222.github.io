<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[12，docker的常用命令]]></title>
    <url>%2F2019%2F02%2F25%2F12%EF%BC%8Cdocker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[docker的常用命令 1、查看docker版本信息docker version查看客户端的信息，并通过socket查询服务端的信息。 2、查看docker信息docker info查看docker的汇总信息。3、查看镜像列表docker images4、查看所有的镜像包括过程镜像docker images -a 5、显示完整的镜像IDdocker images –no-trunc6、只显示镜像IDdocker images –no-trunc -q7、pull镜像docker pull centos:7.6.18108、pull所有标签的镜像docker pull centos9、查看运行中的容器docker ps10、列出所有有容器（包含停止的容器）docker ps -a11、显示容器大小docker ps -a -s12、仅列出最新创建的一个容器docker ps -l13、仅列出最新创建的n个容器docker ps n=214、仅列出容器IDdocker ps -q15、显示完整的容器IDdocker ps -q –no-trunc16、删除镜像docker rmi centos:7.6.181017、强制删除镜像docker rmi -f centos:7.6.1810也可以直接指定镜像ID进行删除。18、不移除该镜像的过程镜像，默认移除。docker rmi nginx:latest –no-prune19、删除容器docekr rm 154fe4e6a0c620、 强行移除该容器，即使其正在运行docker rm -f 154fe4e6a0c621、移除与容器关联的空间docker rm -v 154fe4e6a0c622、查看指定镜像的创建历史docker history centos:latest23、完整显示镜像历史docker history centos:latest –no-trunc24、启动、停止和重启一个或多个指定容器。（多个容器就空格添加多个容器ID即可）docker start 154fe4e6a0c6docker stop 154fe4e6a0c6docker restart 154fe4e6a0c625、启动之后并进入一个标准输入输出终端docker start -a 154fe4e6a0c626、交互式启动docker start -i 154fe4e6a0c627、停止的时候，超时就强制杀掉docker stop 154fe4e6a0c6 -t 2docker restart 154fe4e6a0c6 -t 228、从镜像启动容器docker run -itd centos:7.6.181029、暂停某一容器的所有进程docker pause 154fe4e6a0c630、恢复某一容器的所有进程docker unpause 154fe4e6a0c6 31、查看镜像的标准输出docker logs 154fe4e6a0c6 -f32、仅列出最新10条容器日志。docker logs 154fe4e6a0c6 –tail=”10”33、给镜像打上新的标签docker tag centos:7.6.1810 centos:76181034、杀死一个或多个指定容器进程docker kill 154fe4e6a0c635、将指定镜像保存成 tar 归档文件， docker load 的逆操作。docker save -o “centos.tar”或者docker save &gt; “centos.tar”36、从 tar 镜像归档中载入镜像， docker save 的逆操作。docker load -i centos.tar或者docker load &lt; centos.tar37、导出容器docker export 154fe4e6a0c6 -o export.tar或者docker export 154fe4e6a0c6 &gt; export.tar38、导入容器tar文件到镜像docker import -i export.tar或者docker import &lt; export.tar39、查看一个正在运行容器进程，支持 ps 命令参数。docker top 154fe4e6a0c6 -auxfww40、按步骤输入在 Docker Hub 注册的用户名、密码和邮箱即可完成登录docker login41、运行后从指定服务器登出，默认为官方服务器。docker logout42、启动设置容器主机名docker run -itd –hostname=centos7 centos:latest43、启动挂载本地目录到容器里面docker run -itd -v /data/centos7:/data centos:latest/data/centos7是物理目录，/data是容器里面的目录44、启动时指定dns，如果不指定是跟物理机是一致的docker run -itd –dns 8.8.8.8 centos:latest45、查找镜像站的镜像docker search centos]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[11，克隆完成虚拟机，修改主机名和ip]]></title>
    <url>%2F2019%2F02%2F17%2F11%EF%BC%8C%E5%85%8B%E9%9A%86%E5%AE%8C%E6%88%90%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%8C%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D%E5%92%8Cip%2F</url>
    <content type="text"><![CDATA[Centos 6123ip=77;name=ldapserver;sed -i '/IPADDR/s#200$#'"$ip"'#g' /etc/sysconfig/network-scripts/ifcfg-eth*sed -i 's#oldboy-muban#'"$name"'#g' /etc/sysconfig/network Centos 71234ip=111;name=docker;sed -i '/IPADDR/s#222$#'"$ip"'#g' /etc/sysconfig/network-scripts/ifcfg-eth*#sed -i 's#centos7-muban#'"$name"'#g' /etc/hostnamehostnamectl set-hostname $name]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[10，word手动换行符替换为段落标记]]></title>
    <url>%2F2019%2F02%2F11%2F10%EF%BC%8Cword%E6%89%8B%E5%8A%A8%E6%8D%A2%E8%A1%8C%E7%AC%A6%E6%9B%BF%E6%8D%A2%E4%B8%BA%E6%AE%B5%E8%90%BD%E6%A0%87%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[word手动换行符替换为段落标记 word中的手动换行符是用shift+enter打出的，一个向下的箭头符号。搜索中用符号（^l）表示（line）。word中的段落标记是按回车（enter）打出来的.搜索中用符号（^p）表示（paragraph）。在替换的特殊格式中可以找到“手动换行符”和“段落标记”。]]></content>
      <categories>
        <category>word</category>
      </categories>
      <tags>
        <tag>word</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[9，案例：网站迁移]]></title>
    <url>%2F2018%2F12%2F23%2F9%EF%BC%8C%E6%A1%88%E4%BE%8B%EF%BC%9A%E8%BF%81%E7%A7%BB%E7%BD%91%E7%AB%99%2F</url>
    <content type="text"><![CDATA[一次网站迁移故障及分析http://blog.51cto.com/lxshopping/1574929 迁移流程应该是:123456789101112131.暂停原服务器数据库，导出相关数据库2.将导出的数据库同步到杭州xx服务器上面并导入到数据库中3.对xx服务器进行压力测试及用户登录测试4.回滚方案，出现问题及时回滚到原服务器，保证用户正常访问5.切换域名指向到xx服务器6.原服务器上面做301跳转到xx服务器（保证不写入新数据到原运营服务器上面）7.运营协助测试新服务器数据是否正常]]></content>
      <categories>
        <category>案例</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>网站迁移</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[8，kernel:nf_conntrack:table full,dropping packet.什么问题?如何解决?]]></title>
    <url>%2F2018%2F12%2F23%2F8%EF%BC%8C%E6%A1%88%E4%BE%8B%EF%BC%9A%20tables%20full%2F</url>
    <content type="text"><![CDATA[#企业案例 /var/log/messages 出现kernel:nf_conntrack:table full,dropping packet.什么问题?如何解决? ##解答: 12345678#上述结果会让业务访问很慢!#下面是针对iptables的优化net.nf_conntrack_max = 25000000net.netfilter.nf_conntrack_max = 25000000net.netfilter.nf_conntrack_tcp_timeout_established = 180net.netfilter.nf_conntrack_tcp_timeout_time_wait = 120net.netfilter.nf_conntrack_tcp_timeout_close_wait = 60net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 120]]></content>
      <categories>
        <category>案例</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>iptables</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[7，150+命令]]></title>
    <url>%2F2018%2F09%2F05%2F7%EF%BC%8C150%2B%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[命令 功能说明线上查询及帮助命令(2个)12man 查看命令帮助，命令的词典，更复杂的还有info，但不常用。help 查看Linux内置命令的帮助，比如cd命令。 文件和目录操作命令(18个)123456789101112131415161718ls 全拼list，功能是列出目录的内容及其内容属性信息。cd 全拼change directory，功能是从当前工作目录切换到指定的工作目录。cp 全拼copy，其功能为复制文件或目录。find 查找的意思，用于查找目录及目录下的文件。mkdir 全拼make directories，其功能是创建目录。mv 全拼move，其功能是移动或重命名文件。pwd 全拼print working directory，其功能是显示当前工作目录的绝对路径。rename 用于重命名文件。rm 全拼remove，其功能是删除一个或多个文件或目录。rmdir 全拼remove empty directories，功能是删除空目录。touch 创建新的空文件，改变已有文件的时间戳属性。tree 功能是以树形结构显示目录下的内容。basename 显示文件名或目录名。dirname 显示文件或目录路径。chattr 改变文件的扩展属性。lsattr 查看文件扩展属性。file 显示文件的类型。md5sum 计算和校验文件的MD5值。 查看文件及内容处理命令（21个）123456789101112131415161718192021cat 全拼concatenate，功能是用于连接多个文件并且打印到屏幕输出或重定向到指定文件中。tac tac是cat的反向拼写，因此命令的功能为反向显示文件内容。more 分页显示文件内容。less 分页显示文件内容，more命令的相反用法。head 显示文件内容的头部。tail 显示文件内容的尾部。cut 将文件的每一行按指定分隔符分割并输出。split 分割文件为不同的小片段。paste 按行合并文件内容。sort 对文件的文本内容排序。uniq 去除重复行。oldboywc 统计文件的行数、单词数或字节数。iconv 转换文件的编码格式。dos2unix 将DOS格式文件转换成UNIX格式。diff 全拼difference，比较文件的差异，常用于文本文件。vimdiff 命令行可视化文件比较工具，常用于文本文件。rev 反向输出文件内容。grep/egrep 过滤字符串，三剑客老三。join 按两个文件的相同字段合并。tr 替换或删除字符。vi/vim 命令行文本编辑器。 文件压缩及解压缩命令（4个）1234tar 打包压缩。oldboyunzip 解压文件。gzip gzip压缩工具。zip 压缩工具 信息显示命令（11个）1234567891011uname 显示操作系统相关信息的命令。hostname 显示或者设置当前系统的主机名。dmesg 显示开机信息，用于诊断系统故障。uptime 显示系统运行时间及负载。stat 显示文件或文件系统的状态。du 计算磁盘空间使用情况。df 报告文件系统磁盘空间的使用情况。top 实时显示系统资源使用情况。free 查看系统内存。date 显示与设置系统时间。cal 查看日历等时间信息。 搜索文件命令（4个）1234which 查找二进制命令，按环境变量PATH路径查找。find 从磁盘遍历查找文件或目录。whereis 查找二进制命令，按环境变量PATH路径查找。locate 从数据库 (/var/lib/mlocate/mlocate.db) 查找命令，使用updatedb更新库。 用户管理命令（10个）老男孩12345678910useradd 添加用户。usermod 修改系统已经存在的用户属性。userdel 删除用户。groupadd 添加用户组。passwd 修改用户密码。chage 修改用户密码有效期限。id 查看用户的uid,gid及归属的用户组。su 切换用户身份。visudo 编辑/etc/sudoers文件的专属命令。sudo 以另外一个用户身份（默认root用户）执行事先在sudoers文件允许的命令。 基础网络操作命令（11个）老男孩1234567891011telnet 使用TELNET协议远程登录。ssh 使用SSH加密协议远程登录。scp 全拼secure copy，用于不同主机之间复制文件。wget 命令行下载文件。ping 测试主机之间网络的连通性。route 显示和设置linux系统的路由表。ifconfig 查看、配置、启用或禁用网络接口的命令。ifup 启动网卡。ifdown 关闭网卡。netstat 查看网络状态。ss 查看网络状态。 深入网络操作命令（9个）123456789nmap 网络扫描命令。lsof 全名list open files，也就是列举系统中已经被打开的文件。mail 发送和接收邮件。mutt 邮件管理命令。nslookup 交互式查询互联网DNS服务器的命令。dig 查找DNS解析过程。host 查询DNS的命令。traceroute 追踪数据传输路由状况。tcpdump 命令行的抓包工具。 有关磁盘与文件系统的命令（16个）12345678910111213141516mount 挂载文件系统。umount 卸载文件系统。fsck 检查并修复Linux文件系统。dd 转换或复制文件。dumpe2fs 导出ext2/ext3/ext4文件系统信息。dump ext2/3/4文件系统备份工具。fdisk 磁盘分区命令，适用于2TB以下磁盘分区。parted 磁盘分区命令，没有磁盘大小限制，常用于2TB以下磁盘分区。mkfs 格式化创建Linux文件系统。partprobe 更新内核的硬盘分区表信息。e2fsck 检查ext2/ext3/ext4类型文件系统。mkswap 创建Linux交换分区。swapon 启用交换分区。swapoff 关闭交换分区。sync 将内存缓冲区内的数据写入磁盘。resize2fs 调整ext2/ext3/ext4文件系统大小。 系统权限及用户授权相关命令（4个）1234chmod 改变文件或目录权限。chown 改变文件或目录的属主和属组。chgrp 更改文件用户组。umask 显示或设置权限掩码。 查看系统用户登陆信息的命令（7个）1234567whoami 显示当前有效的用户名称，相当于执行id -un命令。who 显示目前登录系统的用户信息。w 显示已经登陆系统的用户列表，并显示用户正在执行的指令。last 显示登入系统的用户。lastlog 显示系统中所有用户最近一次登录信息。users 显示当前登录系统的所有用户的用户列表。finger 查找并显示用户信息。 内置命令及其它（19个）12345678910111213141516171819echo 打印变量，或直接输出指定的字符串printf 将结果格式化输出到标准输出。rpm 管理rpm包的命令。yum 自动化简单化地管理rpm包的命令。watch 周期性的执行给定的命令，并将命令的输出以全屏方式显示。alias 设置系统别名。unalias 取消系统别名。date 查看或设置系统时间。clear 清除屏幕，简称清屏。history 查看命令执行的历史纪录。eject 弹出光驱。time 计算命令执行时间。nc 功能强大的网络工具。xargs 将标准输入转换成命令行参数。exec 调用并执行指令的命令。export 设置或者显示环境变量。unset 删除变量或函数。type 用于判断另外一个命令是否是内置命令。bc 命令行科学计算器 系统管理与性能监视命令(9个)123456789chkconfig 管理Linux系统开机启动项。vmstat 虚拟内存统计。mpstat 显示各个可用CPU的状态统计。iostat 统计系统IO。sar 全面地获取系统的CPU、运行队列、磁盘 I/O、分页（交换区）、内存、 CPU中断和网络等性能数据。ipcs 用于报告Linux中进程间通信设施的状态，显示的信息包括消息列表、共享内存和信号量的信息。ipcrm 用来删除一个或更多的消息队列、信号量集或者共享内存标识。strace 用于诊断、调试Linux用户空间跟踪器。我们用它来监控用户空间进程和内核的交互，比如系统调用、信号传递、进程状态变更等。ltrace 命令会跟踪进程的库函数调用,它会显现出哪个库函数被调用。 关机/重启/注销和查看系统信息的命令（6个）1234567shutdown 关机。halt 关机。poweroff 关闭电源。logout 退出当前登录的Shell。exit 退出当前登录的Shell。Ctrl+d 退出当前登录的Shell的快捷键。reboot 重启 进程管理相关命令（15个）123456789101112131415bg 将一个在后台暂停的命令，变成继续执行 （在后台执行）。fg 将后台中的命令调至前台继续运行。jobs 查看当前有多少在后台运行的命令。kill 终止进程。killall 通过进程名终止进程。pkill 通过进程名终止进程。crontab 定时任务命令。ps 显示进程的快照。pstree 树形显示进程。nice/renice 调整程序运行的优先级。nohup 忽略挂起信号运行指定的命令。pgrep 查找匹配条件的进程。runlevel 查看系统当前运行级别。init 切换运行级别。service 启动、停止、重新启动和关闭系统服务，还可以显示所有系统服务的当前状态。]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[6，sed引用shell变量]]></title>
    <url>%2F2018%2F09%2F04%2F6%EF%BC%8Csed%E5%BC%95%E7%94%A8shell%E5%8F%98%E9%87%8F%2F</url>
    <content type="text"><![CDATA[下面是可以使用的几种方法1234567# 推荐使用这种方法sed -i 's#centos#'"$name"'#g' test.txteval sed 's/$a/$b/' filenamesed "s/$a/$b/" filenamesed 's/'$a'/'$b'/' filenamesed s/$a/$b/ filename 测试123456789101112[root@centos691 /server/scripts]# cat test.txtcentos[root@centos691 /server/scripts]# name=oldboy;sed -n 's#centos#'"$name"'#gp' test.txtoldboy[root@centos691 /server/scripts]# name=oldboy;sed -n 's#centos#'$name'#gp' test.txtoldboy[root@centos691 /server/scripts]# name=oldboy;sed -n "s#centos#$name#gp" test.txtoldboy[root@centos691 /server/scripts]# name=oldboy;sed -n s#centos#$name#gp test.txtoldboy[root@centos691 /server/scripts]# name=oldboy;eval sed -n 's#centos#$name#gp' test.txtoldboy 实例1234# 克隆完成之后，修改IP和主机名ip=51;name=db01;sed -i '/IPADDR/s#210$#'"$ip"'#g' /etc/sysconfig/network-scripts/ifcfg-eth*;sed -i 's#oldboyedu-muban#'"$name"'#g' /etc/sysconfig/network;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>sed</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[5，LNMP系列（三）之php源码安装]]></title>
    <url>%2F2018%2F09%2F03%2F5%EF%BC%8CLNMP%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%89%EF%BC%89%E4%B9%8Bphp%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[LNMP系列（三）之php源码安装php源码安装 解压PHP软件，进行编译安装，将程序安装到/application目录中，并且创建软链接 123yum install zlib-devel libxml2-devel libjpeg-devel libjpeg-turbo-devel curl-devel -yyum install freetype-devel libpng-devel gd-devel libcurl-devel libxslt-devel libxslt-devel -yrpm -qa zlib-devel libxml2-devel libjpeg-devel libjpeg-turbo-devel curl-devel freetype-devel libpng-devel gd-devel libcurl-devel libxslt-devel libxslt-devel 安装其它相关程序—libmcrypt123456#wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-6.repoyum -y install libmcrypt-devel mhash mcryptrpm -qa libmcrypt-devel mhash mcrypt http://php.net/releases/ 安装PHP软件程序1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677#下载安装包并解压cd ~/tools/wget http://cn2.php.net/distributions/php-5.6.36.tar.gztar xf php-5.6.36.tar.gzcd php-5.6.36 #----正式编译前也可以把这个软件安装上（libxslt*）./configure --prefix=/apps/php-5.6.36 \--with-mysql=mysqlnd \--with-pdo-mysql=mysqlnd \--with-freetype-dir \--with-jpeg-dir \--with-png-dir \--with-zlib \--with-libxml-dir=/usr \--enable-xml \--disable-rpath \--enable-bcmath \--enable-shmop \--enable-sysvsem \--enable-inline-optimization \--with-curl \--enable-mbregex \--enable-fpm \--enable-mbstring \--with-mcrypt \--with-gd \--enable-gd-native-ttf \--with-openssl \--with-mhash \--enable-pcntl \--enable-sockets \--with-xmlrpc \--enable-soap \--enable-short-tags \--enable-static \--with-xsl \--with-fpm-user=www \--with-fpm-group=www \--enable-ftp \--enable-opcache=no##提示 如下内容 即成功Generating filesconfigure: creating ./config.statuscreating main/internal_functions.ccreating main/internal_functions_cli.c+--------------------------------------------------------------------+| License: || This software is subject to the PHP License, available in this || distribution in the file LICENSE. By continuing this installation || process, you are bound by the terms of this license agreement. || If you do not agree with the terms of this license, you must abort || the installation process at this point. |+--------------------------------------------------------------------+Thank you for using PHP.config.status: creating php5.specconfig.status: creating main/build-defs.hconfig.status: creating scripts/phpizeconfig.status: creating scripts/man1/phpize.1config.status: creating scripts/php-configconfig.status: creating scripts/man1/php-config.1config.status: creating sapi/cli/php.1config.status: creating sapi/fpm/php-fpm.confconfig.status: creating sapi/fpm/init.d.php-fpmconfig.status: creating sapi/fpm/php-fpm.serviceconfig.status: creating sapi/fpm/php-fpm.8config.status: creating sapi/fpm/status.htmlconfig.status: creating sapi/cgi/php-cgi.1config.status: creating ext/phar/phar.1config.status: creating ext/phar/phar.phar.1config.status: creating main/php_config.hconfig.status: executing default commands 12345678910111213141516ln -s /apps/mysql/lib/libmysqlclient.so.18 /usr/lib64/ #可以不创建 touch ext/phar/phar.phar #这个文件一定要创建make &amp;&amp; make installln -s /apps/php-5.6.36/ /apps/phpGenerating phar.phpGenerating phar.pharPEAR package PHP_Archive not installed: generated phar will require PHP's phar extension be enabled.clicommand.incpharcommand.incinvertedregexiterator.incdirectorygraphiterator.incdirectorytreeiterator.incphar.incBuild complete. 123456789101112131415161718192021222324252627282930[root@web01 php-5.6.36]# make install Installing PHP CLI binary: /apps/php-5.6.36/bin/Installing PHP CLI man page: /apps/php-5.6.36/php/man/man1/Installing PHP FPM binary: /apps/php-5.6.36/sbin/Installing PHP FPM config: /apps/php-5.6.36/etc/Installing PHP FPM man page: /apps/php-5.6.36/php/man/man8/Installing PHP FPM status page: /apps/php-5.6.36/php/php/fpm/Installing PHP CGI binary: /apps/php-5.6.36/bin/Installing PHP CGI man page: /apps/php-5.6.36/php/man/man1/Installing build environment: /apps/php-5.6.36/lib/php/build/Installing header files: /apps/php-5.6.36/include/php/Installing helper programs: /apps/php-5.6.36/bin/ program: phpize program: php-configInstalling man pages: /apps/php-5.6.36/php/man/man1/ page: phpize.1 page: php-config.1Installing PEAR environment: /apps/php-5.6.36/lib/php/[PEAR] Archive_Tar - installed: 1.4.0[PEAR] Console_Getopt - installed: 1.4.1[PEAR] Structures_Graph- installed: 1.1.1[PEAR] XML_Util - installed: 1.3.0[PEAR] PEAR - installed: 1.10.1Wrote PEAR system config file at: /apps/php-5.6.36/etc/pear.confYou may want to add: /apps/php-5.6.36/lib/php to your php.ini include_path/root/tools/php-5.6.36/build/shtool install -c ext/phar/phar.phar /apps/php-5.6.36/binln -s -f phar.phar /apps/php-5.6.36/bin/pharInstalling PDO headers: /apps/php-5.6.36/include/php/ext/pdo/[root@web01 php-5.6.36]# echo $?0 复制php.ini配置文件1[root@web01 php-5.6.36]# cp /root/tools/php-5.6.36/php.ini-production /apps/php-5.6.36/lib/php.ini 复制php-fpm配置文件1234567891011121314151617[root@web01 php-5.6.36]# cd /apps/php-5.6.36/etc/[root@web01 etc]# ls pear.conf php-fpm.conf.default[root@web01 etc]# cp php-fpm.conf.default php-fpm.conf[root@web01 etc]# lltotal 52-rw-r--r-- 1 root root 1332 Feb 27 22:53 pear.conf-rw-r--r-- 1 root root 22609 Feb 27 22:56 php-fpm.conf-rw-r--r-- 1 root root 22609 Feb 27 22:53 php-fpm.conf.default[root@web01 etc]# /apps/php-5.6.36/sbin/php-fpm -t[27-Feb-2018 22:56:53] NOTICE: configuration file /apps/php-5.6.36/etc/php-fpm.conf test is successful[root@web01 etc]# /apps/php-5.6.36/sbin/php-fpm [root@web01 etc]# ss -lntup |grep 9000tcp LISTEN 0 16384 127.0.0.1:9000 *:* users:(("php-fpm",129733,7),("php-fpm",129734,0),("php-fpm",129735,0)) LNMP搭建网站前的测试。 测试nginx与php配合是否成功php与MySQL配合是否成功部署网站 测试nginx与php配合是否成功1234567891011121314server &#123; listen 80; server_name blog.etiantian.org; root html/blog; index index.php index.html index.htm; location ~ .*\.(php|php5)?$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi.conf; &#125;&#125;echo '&lt;?php phpinfo();?&gt;' &gt;/apps/nginx/html/blog/test_info.php php与MySQL配合是否成功1234567891011test_mysql.php&lt;?php //$link_id=mysql_connect('主机名','用户','密码'); $link_id=mysql_connect('172.16.1.51','wordpress','123456') or mysql_error(); if($link_id)&#123; echo "mysql successful by oldboy ! \n"; &#125;else&#123; echo mysql_error(); &#125;?&gt;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>lnmp</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[4，LNMP系列（二）之MySQL]]></title>
    <url>%2F2018%2F09%2F03%2F4%EF%BC%8CLNMP%E7%B3%BB%E5%88%97%EF%BC%88%E4%BA%8C%EF%BC%89%E4%B9%8BMySQL%2F</url>
    <content type="text"><![CDATA[LNMP系列（二）之MySQL安装–二进制安装二进制安装MySQL-5.6.400.准备工作-下载mysql12345https://downloads.mysql.com/archives/community/mkdir /root/tools -pcd /root/toolswget https://downloads.mysql.com/archives/get/file/mysql-5.6.40-linux-glibc2.12-x86_64.tar.gz 1.添加用户1useradd -s /sbin/nologin -M mysql 2.解压 mysql 二进制包12cd /root/toolstar xf mysql-5.6.40-*-x86_64.tar.gz 3.把MySQL 移动到 /apps/12mkdir -p /apps/mv /root/tools/mysql-5.6.40-*-x86_64 /apps/mysql-5.6.40 4.创建软连接1ln -s /apps/mysql-5.6.40/ /apps/mysql 5.让MySQL用户管理 /apps/mysql1chown -R mysql.mysql /apps/mysql/data 6.安装这个软件 初始化数据库 #1.软件安装在哪里 #2.数据存放在哪里 #3.MySQL使用的用户谁？ 1/apps/mysql/scripts/mysql_install_db --basedir=/apps/mysql --datadir=/apps/mysql/data --user=mysql 12345678910#####To start mysqld at boot time you have to copy#####support-files/mysql.server to the right place for your system#####mysql启动脚本 默认放在support-files/mysql.server##########记得给MySQL设置个密码#####PLEASE REMEMBER TO SET A PASSWORD FOR THE MySQL root USER !#####To do so, start the server, then issue the following commands:########## /apps/mysql/bin/mysqladmin -u root password &apos;new-password&apos;##### /apps/mysql/bin/mysqladmin -u root -h web01 password &apos;new-password&apos; 7.复制启动脚本 授权12cp /apps/mysql/support-files/mysql.server /etc/init.d/mysqldchmod +x /etc/init.d/mysqld 8.修改启动脚本 和 mysql命令 中的路径1sed -i &apos;s#/usr/local/mysql#/apps/mysql#g&apos; /apps/mysql/bin/mysqld_safe /etc/init.d/mysqld 9.复制 默认的配置文件12\cp /apps/mysql/support-files/my-default.cnf /etc/my.cnf/etc/init.d/mysqld start 1234567891011121314151617181920###故障##1./tmp权限##2.主机名解析 hosts解析 #ping 主机名##3.一步一步执行####/apps/mysql/bin/mysql##Welcome to the MySQL monitor. Commands end with ; or \g.##Your MySQL connection id is 1##Server version: 5.5.49 MySQL Community Server (GPL)####Copyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.####Oracle is a registered trademark of Oracle Corporation and/or its##affiliates. Other names may be trademarks of their respective##owners.####Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.####mysql&gt; 10.PATH路径123echo &apos;export PATH=/apps/mysql/bin:$PATH&apos; &gt;&gt;/etc/profilesource /etc/profilewhich mysql 11.加入开机自启动12chkconfig --add mysqldchkconfig mysqld on 12.给MySQL root用户设置密码1/apps/mysql/bin/mysqladmin -u root password &apos;oldboy123&apos; 13.重新登录MySQL数据库1mysql -uroot -poldboy123 14.数据库基础框架 #1.数据库 test mysql #2.表格 12345#mysql SQL语句#查看系统中所有数据库#show databases;#查看系统中所有的用户#使用某一个数据库 1234567891011mysql&gt; #查看当前都有啥mysql&gt; show databases; //********+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || test |+--------------------+4 rows in set (0.07 sec) 初级 查看系列-开始123##使用某一个数据库###相当于进入 mysql 数据库中 cd mysql ; cd test#use mysql 12345678##我想查看当前在哪？ pwd 当前正在使用哪个数据库select database();+------------+| database() |+------------+| mysql |+------------+1 row in set (0.00 sec) 12345678##我是谁？ 查看当前用户select user();+----------------+| user() |+----------------+| root@localhost |+----------------+1 row in set (0.00 sec) 12345678910111213141516###当前系统都有什么用户？ 他们可以在哪里登录？ *****select user,host from mysql.user;+------+-----------+| user | host |+------+-----------+| root | 127.0.0.1 || root | ::1 || | localhost || root | localhost || | web01 || root | web01 |+------+-----------+6 rows in set (0.02 sec)####初级 查看系列-结束###show databases;###select user,host from mysql.user; 初级 添加删除系列12345678910111213141516171819202122#创建数据库create database wordpress;#删除数据库drop database wordpress;#添加用户grant all on wordpress.* to &apos;wordpress&apos;@&apos;172.16.1.0/255.255.255.0&apos; identified by &apos;123456&apos;;grant all on wordpress.* to &apos;wordpress&apos;@&apos;172.16.1.0/255.255.255.0&apos; identified by &apos;123456&apos;;授权所有的权限, wordpress数据库所有的权限 给 wordpress用户 可以在172.16.1.0/255.255.255.0 网段登录数据库 这个用户的密码123456；#更新系统的权限表flush privileges;###进行测试mysql -uwordpress -p123456mysql -uwordpress -p -h 172.16.1.8#删除用户drop user wordpress@&apos;172.16.1.8&apos;; ###1.查看都有什么数据库 ###2.查看都有什么用户 ###3.添加用户 help sql语句。123456789#跳过授权表（不用密码登录）#/etc/init.d/mysqld restart --skip-grant-table#mysql 命令行#-u 指定用户#-p 指定密码（不要有空格）#-h 连接到某一台服务器#更改密码 mysqladmin -uroot -poldboy123 password &apos;新的密码&apos;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>lnmp</tag>
        <tag>mysql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[3，LNMP系列（一）nginx源码安装]]></title>
    <url>%2F2018%2F08%2F24%2F3%EF%BC%8CLNMP%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89nginx%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[LNMP系列（一）nginx源码安装下载安装过程12345678910111213141516171819cd /root/mkdir toolscd tools/yum install openssl openssl-devel -yyum install pcre pcre-devel -yuseradd www -s /sbin/nologin -Mwget -q http://nginx.org/download/nginx-1.14.0.tar.gztar xf nginx-1.14.0.tar.gzcd nginx-1.14.0./configure --user=www --group=www --with-http_ssl_module --with-http_stub_status_module --prefix=/apps/nginx-1.14.0/makemake installln -s /apps/nginx-1.14.0/ /apps/nginx 检查 重启123/apps/nginx/sbin/nginx -t/apps/nginx/sbin/nginx -s reload 配置文件123456789101112131415161718192021222324worker_processes 1;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; server &#123; listen 80; server_name 10.0.0.61; # 域名 location / &#123; root /mnt/hgfs/rpm; # 网站根目录 index index.html index.htm; autoindex on; # 目录列表 autoindex_exact_size off; autoindex_localtime on; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2，hexo改换主题]]></title>
    <url>%2F2018%2F08%2F24%2F2%EF%BC%8Chexo-theme%2F</url>
    <content type="text"><![CDATA[hexo 更换主题自己在github上搭建了一个博客，主题不喜欢，所以就换一个，个人比较喜欢的有两个，一个是light，另了个是next。 安装主题安装都很简单，进入你hexo的根目录，直接git就可以了。每个主题都有给出安装方法，很简单。12345#light git clone https://github.com/hexojs/hexo-theme-light.git themes/light#next git clone https://github.com/theme-next/hexo-theme-next themes/next 使用主题使用也很简单，到_config.yml配置文件中，修改theme选项 1theme: next]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>theme</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1，Hello World]]></title>
    <url>%2F2018%2F08%2F23%2F1%EF%BC%8Chello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
